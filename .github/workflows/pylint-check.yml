name: pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v4.0.0
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ hashFiles('requirements.txt', 'dev/requirements-dev.txt') }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install package dependencies
      run: python -m pip install -r requirements.txt
    - name: Install dev dependencies
      run: python -m pip install -r dev/requirements-dev.txt
  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Run pylint
      run: |
        python3 -m pylint --output-format=text:pylint_output.txt,colorized cdprecorder/
        tail -2 pylint_output.txt | head -1 | awk -F'[^0-9.]+' '{ print $2 }' | xargs > pylint_score.txt
    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: pylint_score
        path: pylint_score.txt
  upload-badge:
    runs-on: ubuntu-latest
    needs: check
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download pylint score
        uses: actions/download-artifact@v4
        with:
          name: pylint_score
      - name: Generate pylint badge
        run: |
          score=$(cat pylint_score.txt)
          if (( $(echo "$score < 5" |bc -l) )); then
            color=red
          elif (( $(echo "$score < 8" |bc -l) )); then
            color=orange
          elif (( $(echo "$score < 10" |bc -l) )); then
            color=yellow
          else
            color=green
          fi
          python -m pybadges --left-text=pylint --right-text="$score" --right-color="$color"
