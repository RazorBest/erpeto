import typing
from .util import T_JSON_DICT as T_JSON_DICT, event_class as event_class
from dataclasses import dataclass

@dataclass
class ConsoleMessage:
    source: str
    level: str
    text: str
    url: str | None = ...
    line: int | None = ...
    column: int | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ConsoleMessage: ...

def clear_messages() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def disable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def enable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...

@dataclass
class MessageAdded:
    message: ConsoleMessage
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> MessageAdded: ...
