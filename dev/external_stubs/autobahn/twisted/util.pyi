from _typeshed import Incomplete
from autobahn.wamp.types import TransportDetails as TransportDetails
from twisted.internet.interfaces import IProcessTransport, ITransport
from typing import Any, Dict, Optional, Union

def sleep(delay, reactor: Incomplete | None = None): ...
def peer2str(transport: Union[ITransport, IProcessTransport]) -> str: ...
def transport_channel_id(transport: object, is_server: bool, channel_id_type: Optional[str] = None) -> Optional[bytes]: ...
def extract_peer_certificate(transport: object) -> Optional[Dict[str, Any]]: ...
def create_transport_details(transport: Union[ITransport, IProcessTransport], is_server: bool) -> TransportDetails: ...
