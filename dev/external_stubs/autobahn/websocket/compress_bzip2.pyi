from _typeshed import Incomplete
from autobahn.websocket.compress_base import PerMessageCompress, PerMessageCompressOffer, PerMessageCompressOfferAccept, PerMessageCompressResponse, PerMessageCompressResponseAccept

__all__ = ['PerMessageBzip2Mixin', 'PerMessageBzip2Offer', 'PerMessageBzip2OfferAccept', 'PerMessageBzip2Response', 'PerMessageBzip2ResponseAccept', 'PerMessageBzip2']

class PerMessageBzip2Mixin:
    EXTENSION_NAME: str
    COMPRESS_LEVEL_PERMISSIBLE_VALUES: Incomplete

class PerMessageBzip2Offer(PerMessageCompressOffer, PerMessageBzip2Mixin):
    @classmethod
    def parse(cls, params): ...
    accept_max_compress_level: Incomplete
    request_max_compress_level: Incomplete
    def __init__(self, accept_max_compress_level: bool = True, request_max_compress_level: int = 0) -> None: ...
    def get_extension_string(self): ...
    def __json__(self): ...

class PerMessageBzip2OfferAccept(PerMessageCompressOfferAccept, PerMessageBzip2Mixin):
    offer: Incomplete
    request_max_compress_level: Incomplete
    compress_level: Incomplete
    def __init__(self, offer, request_max_compress_level: int = 0, compress_level: Incomplete | None = None) -> None: ...
    def get_extension_string(self): ...
    def __json__(self): ...

class PerMessageBzip2Response(PerMessageCompressResponse, PerMessageBzip2Mixin):
    @classmethod
    def parse(cls, params): ...
    client_max_compress_level: Incomplete
    server_max_compress_level: Incomplete
    def __init__(self, client_max_compress_level, server_max_compress_level) -> None: ...
    def __json__(self): ...

class PerMessageBzip2ResponseAccept(PerMessageCompressResponseAccept, PerMessageBzip2Mixin):
    response: Incomplete
    compress_level: Incomplete
    def __init__(self, response, compress_level: Incomplete | None = None) -> None: ...
    def __json__(self): ...

class PerMessageBzip2(PerMessageCompress, PerMessageBzip2Mixin):
    DEFAULT_COMPRESS_LEVEL: int
    @classmethod
    def create_from_response_accept(cls, is_server, accept): ...
    @classmethod
    def create_from_offer_accept(cls, is_server, accept): ...
    server_max_compress_level: Incomplete
    client_max_compress_level: Incomplete
    def __init__(self, is_server, server_max_compress_level, client_max_compress_level) -> None: ...
    def __json__(self): ...
    def start_compress_message(self) -> None: ...
    def compress_message_data(self, data): ...
    def end_compress_message(self): ...
    def start_decompress_message(self) -> None: ...
    def decompress_message_data(self, data): ...
    def end_decompress_message(self) -> None: ...
