import typing
from .util import T_JSON_DICT as T_JSON_DICT, event_class as event_class
from dataclasses import dataclass

class ScriptId(str):
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> ScriptId: ...

@dataclass
class SerializationOptions:
    serialization: str
    max_depth: int | None = ...
    additional_parameters: dict | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> SerializationOptions: ...

@dataclass
class DeepSerializedValue:
    type_: str
    value: typing.Any | None = ...
    object_id: str | None = ...
    weak_local_object_reference: int | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> DeepSerializedValue: ...

class RemoteObjectId(str):
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> RemoteObjectId: ...

class UnserializableValue(str):
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> UnserializableValue: ...

@dataclass
class RemoteObject:
    type_: str
    subtype: str | None = ...
    class_name: str | None = ...
    value: typing.Any | None = ...
    unserializable_value: UnserializableValue | None = ...
    description: str | None = ...
    deep_serialized_value: DeepSerializedValue | None = ...
    object_id: RemoteObjectId | None = ...
    preview: ObjectPreview | None = ...
    custom_preview: CustomPreview | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> RemoteObject: ...

@dataclass
class CustomPreview:
    header: str
    body_getter_id: RemoteObjectId | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> CustomPreview: ...

@dataclass
class ObjectPreview:
    type_: str
    overflow: bool
    properties: list[PropertyPreview]
    subtype: str | None = ...
    description: str | None = ...
    entries: list[EntryPreview] | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ObjectPreview: ...

@dataclass
class PropertyPreview:
    name: str
    type_: str
    value: str | None = ...
    value_preview: ObjectPreview | None = ...
    subtype: str | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> PropertyPreview: ...

@dataclass
class EntryPreview:
    value: ObjectPreview
    key: ObjectPreview | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> EntryPreview: ...

@dataclass
class PropertyDescriptor:
    name: str
    configurable: bool
    enumerable: bool
    value: RemoteObject | None = ...
    writable: bool | None = ...
    get: RemoteObject | None = ...
    set_: RemoteObject | None = ...
    was_thrown: bool | None = ...
    is_own: bool | None = ...
    symbol: RemoteObject | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> PropertyDescriptor: ...

@dataclass
class InternalPropertyDescriptor:
    name: str
    value: RemoteObject | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> InternalPropertyDescriptor: ...

@dataclass
class PrivatePropertyDescriptor:
    name: str
    value: RemoteObject | None = ...
    get: RemoteObject | None = ...
    set_: RemoteObject | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> PrivatePropertyDescriptor: ...

@dataclass
class CallArgument:
    value: typing.Any | None = ...
    unserializable_value: UnserializableValue | None = ...
    object_id: RemoteObjectId | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> CallArgument: ...

class ExecutionContextId(int):
    def to_json(self) -> int: ...
    @classmethod
    def from_json(cls, json: int) -> ExecutionContextId: ...

@dataclass
class ExecutionContextDescription:
    id_: ExecutionContextId
    origin: str
    name: str
    unique_id: str
    aux_data: dict | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExecutionContextDescription: ...

@dataclass
class ExceptionDetails:
    exception_id: int
    text: str
    line_number: int
    column_number: int
    script_id: ScriptId | None = ...
    url: str | None = ...
    stack_trace: StackTrace | None = ...
    exception: RemoteObject | None = ...
    execution_context_id: ExecutionContextId | None = ...
    exception_meta_data: dict | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExceptionDetails: ...

class Timestamp(float):
    def to_json(self) -> float: ...
    @classmethod
    def from_json(cls, json: float) -> Timestamp: ...

class TimeDelta(float):
    def to_json(self) -> float: ...
    @classmethod
    def from_json(cls, json: float) -> TimeDelta: ...

@dataclass
class CallFrame:
    function_name: str
    script_id: ScriptId
    url: str
    line_number: int
    column_number: int
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> CallFrame: ...

@dataclass
class StackTrace:
    call_frames: list[CallFrame]
    description: str | None = ...
    parent: StackTrace | None = ...
    parent_id: StackTraceId | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> StackTrace: ...

class UniqueDebuggerId(str):
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> UniqueDebuggerId: ...

@dataclass
class StackTraceId:
    id_: str
    debugger_id: UniqueDebuggerId | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> StackTraceId: ...

def await_promise(promise_object_id: RemoteObjectId, return_by_value: bool | None = None, generate_preview: bool | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[RemoteObject, ExceptionDetails | None]]: ...
def call_function_on(function_declaration: str, object_id: RemoteObjectId | None = None, arguments: list[CallArgument] | None = None, silent: bool | None = None, return_by_value: bool | None = None, generate_preview: bool | None = None, user_gesture: bool | None = None, await_promise: bool | None = None, execution_context_id: ExecutionContextId | None = None, object_group: str | None = None, throw_on_side_effect: bool | None = None, unique_context_id: str | None = None, serialization_options: SerializationOptions | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[RemoteObject, ExceptionDetails | None]]: ...
def compile_script(expression: str, source_url: str, persist_script: bool, execution_context_id: ExecutionContextId | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[ScriptId | None, ExceptionDetails | None]]: ...
def disable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def discard_console_entries() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def enable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def evaluate(expression: str, object_group: str | None = None, include_command_line_api: bool | None = None, silent: bool | None = None, context_id: ExecutionContextId | None = None, return_by_value: bool | None = None, generate_preview: bool | None = None, user_gesture: bool | None = None, await_promise: bool | None = None, throw_on_side_effect: bool | None = None, timeout: TimeDelta | None = None, disable_breaks: bool | None = None, repl_mode: bool | None = None, allow_unsafe_eval_blocked_by_csp: bool | None = None, unique_context_id: str | None = None, serialization_options: SerializationOptions | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[RemoteObject, ExceptionDetails | None]]: ...
def get_isolate_id() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, str]: ...
def get_heap_usage() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[float, float, float, float]]: ...
def get_properties(object_id: RemoteObjectId, own_properties: bool | None = None, accessor_properties_only: bool | None = None, generate_preview: bool | None = None, non_indexed_properties_only: bool | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[list[PropertyDescriptor], list[InternalPropertyDescriptor] | None, list[PrivatePropertyDescriptor] | None, ExceptionDetails | None]]: ...
def global_lexical_scope_names(execution_context_id: ExecutionContextId | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, list[str]]: ...
def query_objects(prototype_object_id: RemoteObjectId, object_group: str | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, RemoteObject]: ...
def release_object(object_id: RemoteObjectId) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def release_object_group(object_group: str) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def run_if_waiting_for_debugger() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def run_script(script_id: ScriptId, execution_context_id: ExecutionContextId | None = None, object_group: str | None = None, silent: bool | None = None, include_command_line_api: bool | None = None, return_by_value: bool | None = None, generate_preview: bool | None = None, await_promise: bool | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[RemoteObject, ExceptionDetails | None]]: ...
def set_async_call_stack_depth(max_depth: int) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_custom_object_formatter_enabled(enabled: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_max_call_stack_size_to_capture(size: int) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def terminate_execution() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def add_binding(name: str, execution_context_id: ExecutionContextId | None = None, execution_context_name: str | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def remove_binding(name: str) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def get_exception_details(error_object_id: RemoteObjectId) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, ExceptionDetails | None]: ...

@dataclass
class BindingCalled:
    name: str
    payload: str
    execution_context_id: ExecutionContextId
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> BindingCalled: ...

@dataclass
class ConsoleAPICalled:
    type_: str
    args: list[RemoteObject]
    execution_context_id: ExecutionContextId
    timestamp: Timestamp
    stack_trace: StackTrace | None
    context: str | None
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ConsoleAPICalled: ...

@dataclass
class ExceptionRevoked:
    reason: str
    exception_id: int
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExceptionRevoked: ...

@dataclass
class ExceptionThrown:
    timestamp: Timestamp
    exception_details: ExceptionDetails
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExceptionThrown: ...

@dataclass
class ExecutionContextCreated:
    context: ExecutionContextDescription
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExecutionContextCreated: ...

@dataclass
class ExecutionContextDestroyed:
    execution_context_id: ExecutionContextId
    execution_context_unique_id: str
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExecutionContextDestroyed: ...

@dataclass
class ExecutionContextsCleared:
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ExecutionContextsCleared: ...

@dataclass
class InspectRequested:
    object_: RemoteObject
    hints: dict
    execution_context_id: ExecutionContextId | None
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> InspectRequested: ...
