import typing
from .util import T_JSON_DICT as T_JSON_DICT, event_class as event_class
from dataclasses import dataclass

@dataclass
class ScreenshotParams:
    format_: str | None = ...
    quality: int | None = ...
    optimize_for_speed: bool | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ScreenshotParams: ...

def begin_frame(frame_time_ticks: float | None = None, interval: float | None = None, no_display_updates: bool | None = None, screenshot: ScreenshotParams | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, tuple[bool, str | None]]: ...
def disable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def enable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
