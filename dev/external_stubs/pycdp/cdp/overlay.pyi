import enum
import typing
from . import dom as dom, page as page, runtime as runtime
from .util import T_JSON_DICT as T_JSON_DICT, event_class as event_class
from dataclasses import dataclass

@dataclass
class SourceOrderConfig:
    parent_outline_color: dom.RGBA
    child_outline_color: dom.RGBA
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> SourceOrderConfig: ...

@dataclass
class GridHighlightConfig:
    show_grid_extension_lines: bool | None = ...
    show_positive_line_numbers: bool | None = ...
    show_negative_line_numbers: bool | None = ...
    show_area_names: bool | None = ...
    show_line_names: bool | None = ...
    show_track_sizes: bool | None = ...
    grid_border_color: dom.RGBA | None = ...
    cell_border_color: dom.RGBA | None = ...
    row_line_color: dom.RGBA | None = ...
    column_line_color: dom.RGBA | None = ...
    grid_border_dash: bool | None = ...
    cell_border_dash: bool | None = ...
    row_line_dash: bool | None = ...
    column_line_dash: bool | None = ...
    row_gap_color: dom.RGBA | None = ...
    row_hatch_color: dom.RGBA | None = ...
    column_gap_color: dom.RGBA | None = ...
    column_hatch_color: dom.RGBA | None = ...
    area_border_color: dom.RGBA | None = ...
    grid_background_color: dom.RGBA | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> GridHighlightConfig: ...

@dataclass
class FlexContainerHighlightConfig:
    container_border: LineStyle | None = ...
    line_separator: LineStyle | None = ...
    item_separator: LineStyle | None = ...
    main_distributed_space: BoxStyle | None = ...
    cross_distributed_space: BoxStyle | None = ...
    row_gap_space: BoxStyle | None = ...
    column_gap_space: BoxStyle | None = ...
    cross_alignment: LineStyle | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> FlexContainerHighlightConfig: ...

@dataclass
class FlexItemHighlightConfig:
    base_size_box: BoxStyle | None = ...
    base_size_border: LineStyle | None = ...
    flexibility_arrow: LineStyle | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> FlexItemHighlightConfig: ...

@dataclass
class LineStyle:
    color: dom.RGBA | None = ...
    pattern: str | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> LineStyle: ...

@dataclass
class BoxStyle:
    fill_color: dom.RGBA | None = ...
    hatch_color: dom.RGBA | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> BoxStyle: ...

class ContrastAlgorithm(enum.Enum):
    AA = 'aa'
    AAA = 'aaa'
    APCA = 'apca'
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> ContrastAlgorithm: ...

@dataclass
class HighlightConfig:
    show_info: bool | None = ...
    show_styles: bool | None = ...
    show_rulers: bool | None = ...
    show_accessibility_info: bool | None = ...
    show_extension_lines: bool | None = ...
    content_color: dom.RGBA | None = ...
    padding_color: dom.RGBA | None = ...
    border_color: dom.RGBA | None = ...
    margin_color: dom.RGBA | None = ...
    event_target_color: dom.RGBA | None = ...
    shape_color: dom.RGBA | None = ...
    shape_margin_color: dom.RGBA | None = ...
    css_grid_color: dom.RGBA | None = ...
    color_format: ColorFormat | None = ...
    grid_highlight_config: GridHighlightConfig | None = ...
    flex_container_highlight_config: FlexContainerHighlightConfig | None = ...
    flex_item_highlight_config: FlexItemHighlightConfig | None = ...
    contrast_algorithm: ContrastAlgorithm | None = ...
    container_query_container_highlight_config: ContainerQueryContainerHighlightConfig | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> HighlightConfig: ...

class ColorFormat(enum.Enum):
    RGB = 'rgb'
    HSL = 'hsl'
    HWB = 'hwb'
    HEX_ = 'hex'
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> ColorFormat: ...

@dataclass
class GridNodeHighlightConfig:
    grid_highlight_config: GridHighlightConfig
    node_id: dom.NodeId
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> GridNodeHighlightConfig: ...

@dataclass
class FlexNodeHighlightConfig:
    flex_container_highlight_config: FlexContainerHighlightConfig
    node_id: dom.NodeId
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> FlexNodeHighlightConfig: ...

@dataclass
class ScrollSnapContainerHighlightConfig:
    snapport_border: LineStyle | None = ...
    snap_area_border: LineStyle | None = ...
    scroll_margin_color: dom.RGBA | None = ...
    scroll_padding_color: dom.RGBA | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ScrollSnapContainerHighlightConfig: ...

@dataclass
class ScrollSnapHighlightConfig:
    scroll_snap_container_highlight_config: ScrollSnapContainerHighlightConfig
    node_id: dom.NodeId
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ScrollSnapHighlightConfig: ...

@dataclass
class HingeConfig:
    rect: dom.Rect
    content_color: dom.RGBA | None = ...
    outline_color: dom.RGBA | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> HingeConfig: ...

@dataclass
class WindowControlsOverlayConfig:
    show_css: bool
    selected_platform: str
    theme_color: str
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> WindowControlsOverlayConfig: ...

@dataclass
class ContainerQueryHighlightConfig:
    container_query_container_highlight_config: ContainerQueryContainerHighlightConfig
    node_id: dom.NodeId
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ContainerQueryHighlightConfig: ...

@dataclass
class ContainerQueryContainerHighlightConfig:
    container_border: LineStyle | None = ...
    descendant_border: LineStyle | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ContainerQueryContainerHighlightConfig: ...

@dataclass
class IsolatedElementHighlightConfig:
    isolation_mode_highlight_config: IsolationModeHighlightConfig
    node_id: dom.NodeId
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> IsolatedElementHighlightConfig: ...

@dataclass
class IsolationModeHighlightConfig:
    resizer_color: dom.RGBA | None = ...
    resizer_handle_color: dom.RGBA | None = ...
    mask_color: dom.RGBA | None = ...
    def to_json(self) -> T_JSON_DICT: ...
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> IsolationModeHighlightConfig: ...

class InspectMode(enum.Enum):
    SEARCH_FOR_NODE = 'searchForNode'
    SEARCH_FOR_UA_SHADOW_DOM = 'searchForUAShadowDOM'
    CAPTURE_AREA_SCREENSHOT = 'captureAreaScreenshot'
    SHOW_DISTANCES = 'showDistances'
    NONE = 'none'
    def to_json(self) -> str: ...
    @classmethod
    def from_json(cls, json: str) -> InspectMode: ...

def disable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def enable() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def get_highlight_object_for_test(node_id: dom.NodeId, include_distance: bool | None = None, include_style: bool | None = None, color_format: ColorFormat | None = None, show_accessibility_info: bool | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, dict]: ...
def get_grid_highlight_objects_for_test(node_ids: list[dom.NodeId]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, dict]: ...
def get_source_order_highlight_object_for_test(node_id: dom.NodeId) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, dict]: ...
def hide_highlight() -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def highlight_frame(frame_id: page.FrameId, content_color: dom.RGBA | None = None, content_outline_color: dom.RGBA | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def highlight_node(highlight_config: HighlightConfig, node_id: dom.NodeId | None = None, backend_node_id: dom.BackendNodeId | None = None, object_id: runtime.RemoteObjectId | None = None, selector: str | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def highlight_quad(quad: dom.Quad, color: dom.RGBA | None = None, outline_color: dom.RGBA | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def highlight_rect(x: int, y: int, width: int, height: int, color: dom.RGBA | None = None, outline_color: dom.RGBA | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def highlight_source_order(source_order_config: SourceOrderConfig, node_id: dom.NodeId | None = None, backend_node_id: dom.BackendNodeId | None = None, object_id: runtime.RemoteObjectId | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_inspect_mode(mode: InspectMode, highlight_config: HighlightConfig | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_ad_highlights(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_paused_in_debugger_message(message: str | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_debug_borders(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_fps_counter(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_grid_overlays(grid_node_highlight_configs: list[GridNodeHighlightConfig]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_flex_overlays(flex_node_highlight_configs: list[FlexNodeHighlightConfig]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_scroll_snap_overlays(scroll_snap_highlight_configs: list[ScrollSnapHighlightConfig]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_container_query_overlays(container_query_highlight_configs: list[ContainerQueryHighlightConfig]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_paint_rects(result: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_layout_shift_regions(result: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_scroll_bottleneck_rects(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_hit_test_borders(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_web_vitals(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_viewport_size_on_resize(show: bool) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_hinge(hinge_config: HingeConfig | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_isolated_elements(isolated_element_highlight_configs: list[IsolatedElementHighlightConfig]) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def set_show_window_controls_overlay(window_controls_overlay_config: WindowControlsOverlayConfig | None = None) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...

@dataclass
class InspectNodeRequested:
    backend_node_id: dom.BackendNodeId
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> InspectNodeRequested: ...

@dataclass
class NodeHighlightRequested:
    node_id: dom.NodeId
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> NodeHighlightRequested: ...

@dataclass
class ScreenshotRequested:
    viewport: page.Viewport
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> ScreenshotRequested: ...

@dataclass
class InspectModeCanceled:
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> InspectModeCanceled: ...
