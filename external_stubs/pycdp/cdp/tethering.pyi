import typing
from .util import T_JSON_DICT as T_JSON_DICT, event_class as event_class
from dataclasses import dataclass

def bind(port: int) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...
def unbind(port: int) -> typing.Generator[T_JSON_DICT, T_JSON_DICT, None]: ...

@dataclass
class Accepted:
    port: int
    connection_id: str
    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> Accepted: ...
    def to_json(self) -> T_JSON_DICT: ...
    def __init__(self, port, connection_id) -> None: ...
